# ========
# VALIDATE
# ========

name: Validate

# Activation Events
# =================

on: # Validate on any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - "releases/*"
  workflow_dispatch:

# Jobs
# ====

jobs:
  # Check the build/ci process works properly
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          npm install
          npm run build

  check-dist: # Check whether the checked-in dist actually matches what we expect it to be
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install dependencies
        run: npm ci

      - name: Rebuild the dist/ directory
        run: npm run dev

      - name: Compare the expected and actual dist/ directories
        run: |
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi
        id: diff

      # If dist/index.js was different than expected, create a pull request
      - name: Create pull request
        id: create-pull-request
        if: ${{ failure() && steps.diff.conclusion == 'failure' }}
        uses: peter-evans/create-pull-request@v3
        with:
          title: Build ðŸ“¦
          commit-message: Build ðŸ“¦
          branch: build
          delete-branch: true
          # labels: |
          #   automated
          assignees: Shresht7
          token: ${{ secrets.GITHUB_TOKEN }}

  # make sure the action works on a clean machine without building
  test-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: action-metadata
        id: action-metadata
        uses: ./

      - name: check output
        uses: actions/github-script@v6
        with:
          script: |
            const metadata = ${{ fromJSON(steps.action-metadata.outputs.metadata) }}
            if (!('name' in metadata)) {
              core.setFailed('Failed to parse metadata')
            }
